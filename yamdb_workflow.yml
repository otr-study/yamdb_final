name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username:  ${{ secrets.DOCKER_USERNAME }}
          password:  ${{ secrets.DOCKER_PASSWORD }} 
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: otrstudy/web:version_for_test
          context: api_yamdb/

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_ENGINE: ${{ secrets.DB_ENGINE }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop
            sudo docker compose rm web --force
            sudo docker rmi otrstudy/web --force 2>/dev/null
            sudo docker compose up -d
            sudo docker compose exec web python manage.py migrate
            sudo docker compose exec web python manage.py collectstatic --no-input
            sudo docker compose exec web ls
            sudo docker compose exec web python manage.py load_data_csv staticfiles/data

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }}
